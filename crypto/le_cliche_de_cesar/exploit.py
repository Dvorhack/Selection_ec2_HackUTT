import subprocess
import tqdm
#Python file to decode the file.enc given

#Functions definition
#Try to find jpg header
def findKey(header,byte):
    rang=[0]*len(header)
    for i in range(len(header)):
        #We compare the n-byte of the given file to the n-byte of the signature
        while(byte[i]!=header[i]):
            #We add 1 to shift the byte in the scope of values a byte can take (mod[256])
            byte[i]=(byte[i]+1)%256
            rang[i]+=1
    return rang

# Try to find a logic link between the offsets of the different ranges
def findHeader(byte):
    #Define the file signatures 
    jpeg =[0xff,0xd8,0xff]
    png =[0x89,0x50,0x4e,0x47, 0x0d, 0x0a, 0x1a, 0x0a]
    headers={"jpeg":jpeg,"png":png}

    for i in headers.keys():
        rang= findKey(headers[i],byte)
        print(f"The offsets for a {i}",rang)

#Modify the file 
def modifyFile(initialByte):
    for i in range(len(initialByte)):
        initialByte[i]=(initialByte[i]-i)%256
    print("The file was successfully modified")

def main():
    #Firstly, open the file and read it byte by byte
    with open("file.enc", "rb") as f:
            byte=f.read()

    byte=list(byte)
    initialByte=byte.copy()

    #Find if there is a logic link between the ranges offset
    findHeader(byte)

    #Modify the file
    modifyFile(initialByte)
    initialByte=bytes(initialByte)

    #Write the modified data into a new file
    with open("decoded","wb") as decoded:
        decoded.write(initialByte)

    print("You can find the decoded file in the current directory. It is named : decoded")
    
if __name__=="__main__":
    main()
