
def rev_Milk(str,n):
    third_part = str[:n]
    second_part = "50gYhJeXW~34i"
    first_part = str[n:19]

    return first_part + second_part + third_part

def rev_Tea(strr):
    tmp_str = [ord(x) for x in strr]
    for i in range(0x10):
        tmp_str[i] -= (i//2) * -3
    
    for i in range(0x10,0x20):
        tmp_str[i] -= i//6
    
    return ''.join([chr(x) for x in tmp_str])

def rev_Sugar(cipher_str):
    start = "0123456789abcdefghijklmnopqrstuv"
    end = "13579bdfhjlnprtv02468acegikmoqsu"

    rev_permut = []
    for i in start:
        rev_permut.append(end.find(i))
    ret = []
    for i in rev_permut:
        ret.append(cipher_str[i])
    
    return ''.join(ret)

out = "R;crc75ihl`cNYe`]m%50gYhugow~34i"
out = "R;crc75iakQQNYe`]m%50gYhJeXW~34i"

for e in out:
    print(hex(ord(e)))

for i in range(20):
    flag = out
    flag = rev_Milk(flag,i)
    flag = rev_Tea(flag)
    flag = rev_Sugar(flag)
    if "UTT" in flag:
        print(flag)
     #   exit(0)